import java.util.List;
import com.egugue.licol.domain.tweet.media.Photo;
import com.egugue.licol.domain.tweet.media.Video;
import com.egugue.licol.domain.tweet.Url;

CREATE TABLE liked_tweet (
  id INTEGER NOT NULL PRIMARY KEY,
  user_id INTEGER NOT NULL,
  text TEXT NOT NULL,
  liked_count INTEGER AS Integer NOT NULL,
  image_list TEXT AS List<Photo> NOT NULL,
  url_list TEXT AS List<Url> NOT NULL,
  video TEXT as Video,
  quoted_tweet_id INTEGER,
  created INTEGER NOT NULL,
  FOREIGN KEY(user_id) REFERENCES user(id),
  FOREIGN KEY(quoted_tweet_id) REFERENCES quoted_tweet(id)
);

select_all:
SELECT *
FROM liked_tweet
LEFT JOIN quoted_tweet ON liked_tweet.quoted_tweet_id = quoted_tweet.id
order by created desc
;

select_liked_tweets:
SELECT *
FROM liked_tweet
LEFT JOIN quoted_tweet ON liked_tweet.quoted_tweet_id = quoted_tweet.id
order by created desc
limit ?
offset ?
;

select_liked_tweets_by_ids:
SELECT *
FROM liked_tweet
LEFT JOIN quoted_tweet ON liked_tweet.quoted_tweet_id = quoted_tweet.id
WHERE liked_tweet.id IN ?
order by created desc
limit ?
offset ?
;

select_liked_tweets_by_user_id:
SELECT *
FROM liked_tweet
LEFT JOIN quoted_tweet ON liked_tweet.quoted_tweet_id = quoted_tweet.id
WHERE liked_tweet.user_id = :user_id
order by created desc
limit ?
offset ?
;

search_liked_tweets_by_text:
SELECT *
FROM liked_tweet
LEFT JOIN quoted_tweet ON liked_tweet.quoted_tweet_id = quoted_tweet.id
WHERE liked_tweet.text LIKE '%' || ? || '%' escape '$' COLLATE NOCASE
ORDER BY liked_tweet.created DESC
limit ?
offset ?
;

select_id_by_user_ids:
SELECT id, user_id
FROM liked_tweet
WHERE liked_tweet.user_id IN ?
;


insert_liked_tweet:
INSERT OR IGNORE INTO liked_tweet (
    id,
    user_id,
    text,
    liked_count,
    image_list,
    url_list,
    video,
    quoted_tweet_id,
    created
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
;

delete_by_id:
DELETE FROM liked_tweet
WHERE id = ?
;
